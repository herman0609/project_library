#ifndef TOURIST_GUARD__H 
#define TOURIST_GUARD__H

#include <stdio.h>

/*You can extend the structs (Book and BookList) defined in this head file;
  However, you may not change the function prototypes. 
  You are also free to add additional head files and data structures as needed. 
*/



typedef struct _tourist_user{
		char *true_name;
		char *tourist_user_name;
		char *code;
		int is_librarian; //0 for tourist_user and 1 for librarian
		struct _tourist_user *next;
		
}tourist_user;

typedef struct _Borrowed{
		char *tourist_user_name;
		unsigned int id; //Book ID
		char *title; //book title
		char *authors; //comma separated list of authors
		unsigned int year; // year of publication		
		struct _Borrowed *next;
}Borrowed;

tourist_user *librarian;
Borrowed *Borrowedhead;


//saves the database of books in the specified file
//returns 0 if books were stored correctly, or an error code otherwise
int store_tourist_books();
int store_tourist_tourist_users();
int store_tourist_borrow();
//loads the database of books from the specified file
//the file must have been generated by a previous call to store_tourist_books()
//returns 0 if books were loaded correctly, or an error code otherwise
Book *load_tourist_books(const char *filename);
tourist_user *load_tourist_tourist_users(const char *filename);
Borrowed *load_tourist_Borrowed(const char *filename);

//finds books with a given title.
//returns a BookList structure, where the field "List" is a newly allocated List of books, or null if no book with the 
//provided title can be found. The length of the List is also recorded in the returned structure, with 0 in case
//List is the null pointer.
void tourist_find_book_by_title ();

//finds books with the given authors.
//returns a BookList structure, where the field "List" is a newly allocated List of books, or null if no book with the 
//provided title can be found. The length of the List is also recorded in the returned structure, with 0 in case
//List is the null pointer.
void tourist_find_book_by_author ();

//finds books published in the given year.
//returns a BookList structure, where the field "List" is a newly allocated List of books, or null if no book with the 
//provided title can be found. The length of the List is also recorded in the returned structure, with 0 in case
//List is the null pointer.
void tourist_find_book_by_year ();

Book *tourist_find_book_by_id(unsigned int id);

char *ask_question(const char *question);


int borrow_book(tourist_user *tourist_user);
Borrowed *find_borrowed_book_by_id(unsigned int book_id,tourist_user *tourist_user);
int return_book(tourist_user *tourist_user);

void Search_books();

void initial_tourist_user_system();

void Display_books();
void Display_tourist_user_books(tourist_user *tourist_user);

int main_tourist();
void Log_out();
void Search_books();

//Reference

#endif